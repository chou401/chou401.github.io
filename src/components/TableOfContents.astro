---
import TableOfContentsHeading from "@/components/TabletOfContentsHeading";

const { headings } = Astro.props;

type TableOfContent = {
	depth: number;
	text: string;
	slug: string;
	subheadings: TableOfContent[];
};

const toc = buildToc(headings);
function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = [];
	let parentHeadings = new Map();
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] };
		parentHeadings.set(heading.depth, heading);
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 1 || heading.depth === 2) {
			toc.push(heading);
		} else {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading);
		}
	});
	return toc;
}
---

<nav class="max-w-xs dark:text-black" style="height:62rem">
	<h1 class="mb-3 text-2xl font-bold dark:text-white">Index</h1>
	<ul class="sidebar flex flex-col gap-4 [text-wrap:balance]">
		{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
	</ul>
</nav>
